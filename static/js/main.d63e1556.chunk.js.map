{"version":3,"sources":["components/contactForm/contactForm.module.css","components/contactList/contactList.module.css","components/alert/alert.module.css","components/contactList/contactListItem/contactListItem.module.css","components/transitions/listItemTransitons.module.css","components/filter/filter.module.css","components/transitions/filterTransition.module.css","components/transitions/logoTransition.module.css","components/transitions/alertTransition.module.css","components/redux/types.js","components/redux/store.js","components/redux/reducers.js","components/contactForm/ContactForm.js","components/contactList/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/alert/Alert.js","components/filter/Filter.js","components/redux/actions.js","components/App.js","index.js","components/app.module.css"],"names":["module","exports","rootReducer","combineReducers","contacts","state","type","payload","types","filter","contact","id","persistConfig","key","storage","whitelist","blacklist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ContactForm","name","number","handleChange","e","setState","target","value","handleSubmit","console","log","preventDefault","smth","Number","isNaN","alert","props","submitContact","uuid","className","css","form","onSubmit","this","titleName","placeholder","onChange","titleNumber","submitButt","Component","ContactListItem","deleteContact","contactListItem","deleteButt","onClick","ContactList","contactListWrapper","noice","TransitionGroup","component","contactList","map","CSSTransition","in","timeout","classNames","listItemTransition","unmountOnExit","Alert","alertWrapper","alertMessage","Filter","nameFilter","filterTitle","createAction","addContact","App","logo","data","some","prevState","setTimeout","getFilteredContacts","toLowerCase","includes","localStorage","getItem","JSON","parse","setItem","stringify","titleWrapper","logoTransition","mainTitle","avocado","formWrapper","length","filterTransition","alertTransition","mainAlertWrapper","connect","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d63e1556.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__SmClE\",\"titleName\":\"contactForm_titleName__363R8\",\"titleNumber\":\"contactForm_titleNumber__1jgla\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noice\":\"contactList_noice__3p0lw\",\"contactList\":\"contactList_contactList__3jNfU\",\"contactListWrapper\":\"contactList_contactListWrapper__38rcq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertWrapper\":\"alert_alertWrapper__1BXBp\",\"alertMessage\":\"alert_alertMessage__1N6qW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"contactListItem_contactListItem__1-Sng\",\"deleteButt\":\"contactListItem_deleteButt__1P2Aa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"listItemTransitons_enter__3RtLw\",\"enterActive\":\"listItemTransitons_enterActive__25CwQ\",\"exit\":\"listItemTransitons_exit__3N-pW\",\"exitActive\":\"listItemTransitons_exitActive__3kyXN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterTitle\":\"filter_filterTitle__2Kl-R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"filterTransition_enter__3-e2O\",\"enterActive\":\"filterTransition_enterActive__zoYud\",\"exit\":\"filterTransition_exit__25VKn\",\"exitActive\":\"filterTransition_exitActive__27zSr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"logoTransition_enter__2xgWT\",\"enterActive\":\"logoTransition_enterActive__5yds9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"alertTransition_enter__1vt5b\",\"enterActive\":\"alertTransition_enterActive__gxLBm\",\"exit\":\"alertTransition_exit__YMCNc\",\"exitActive\":\"alertTransition_exitActive__29_ij\"};","export default {\r\n  ADD_CONTACT: \"ADD_CONTACT\",\r\n  DELETE_CONTACT: \"DELETE_CONTACT\",\r\n  FILTER_CONTACT: \"FILTER_CONTACT\"\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { contacts } from \"./reducers\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER\r\n} from \"redux-persist\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts\r\n});\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"contacts\"],\r\n  blacklist: [\"_persist\"]\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n    }\r\n  })\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import types from \"./types\";\r\n\r\nexport const reducer = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const contacts = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD_CONTACT:\r\n      return [...state, payload];\r\n    case types.DELETE_CONTACT:\r\n      return state.filter(contact => contact.id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// const handlers = {\r\n//   [types.ADD_CONTACT]: (state, { payload }) => [...state, payload],\r\n//   [types.DELETE_CONTACT]: (state, { payload }) =>\r\n//     state.filter(contact => contact.id !== payload),\r\n//   DEFAULT: state => state\r\n// };\r\n","import React, { Component } from \"react\";\r\nimport { uuid } from \"uuidv4\";\r\nimport css from \"./contactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    console.log(\"this.state.number\", this.state.number);\r\n    e.preventDefault();\r\n    const smth = Number(this.state.number);\r\n    if (!Number.isNaN(smth)) {\r\n      this.props.submitContact({\r\n        name: this.state.name,\r\n        number: this.state.number,\r\n        id: uuid()\r\n      });\r\n      this.setState({\r\n        name: \"\",\r\n        number: \"\"\r\n      });\r\n    } else {\r\n      alert('I NID NUMBA')\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form className={css.form} onSubmit={this.handleSubmit}>\r\n          <h2 className={css.titleName}>Name</h2>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"имя сюда / yo name here\"\r\n            onChange={this.handleChange}\r\n            value={this.state.name}\r\n          ></input>\r\n          <h2 className={css.titleNumber}>Number</h2>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            placeholder=\"номер сюда/type yo numba here\"\r\n            // pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\r\n            onChange={this.handleChange}\r\n            value={this.state.number}\r\n          ></input>\r\n          <button className={css.submitButt} type=\"submit\">\r\n            Пойдет, жмакай / slap dat butt\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport css from \"./contactListItem.module.css\";\r\n\r\nconst ContactListItem = ({ contact: { name, number, id }, deleteContact }) => {\r\n  return (\r\n    <li className={css.contactListItem}>\r\n      <div>\r\n        <span>{name}, </span>\r\n        <span>{number}</span>\r\n      </div>\r\n\r\n      <button\r\n        className={css.deleteButt}\r\n        onClick={deleteContact}\r\n        type=\"button\"\r\n        id={id}\r\n      >\r\n        dilit dis\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport ContactListItem from \"./contactListItem/ContactListItem\";\r\nimport css from \"./contactList.module.css\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport listItemTransition from \"../transitions/listItemTransitons.module.css\";\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => (\r\n  <div className={css.contactListWrapper}>\r\n    <h2 className={css.noice}>Contacts</h2>\r\n    <TransitionGroup component=\"ul\" className={css.contactList}>\r\n      {contacts.map(contact => (\r\n        <CSSTransition\r\n          in={true}\r\n          key={contact.id}\r\n          timeout={1000}\r\n          classNames={listItemTransition}\r\n          unmountOnExit\r\n        >\r\n          <ContactListItem\r\n            contact={contact}\r\n            key={contact.id}\r\n            deleteContact={deleteContact}\r\n          />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  </div>\r\n);\r\n\r\nexport default ContactList;\r\n","import React from 'react'\r\nimport css from './alert.module.css'\r\n\r\nconst Alert = () => {\r\n    return (\r\n        <div className={css.alertWrapper}>\r\n            <p className={css.alertMessage}>AHTUNGЭ!</p>\r\n            <p className={css.alertMessage}>DIS NAME IS HERE АЛРЭДИ</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert;","import React from \"react\";\r\nimport css from \"./filter.module.css\";\r\n\r\nconst Filter = ({ nameFilter }) => (\r\n  <div>\r\n    <h2 className={css.filterTitle}>Find contact by name</h2>\r\n    <input type=\"text\" onChange={nameFilter} />\r\n  </div>\r\n);\r\n\r\nexport default Filter;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const deleteContact = createAction(\"DELETE_CONTACT\");\r\n\r\nexport const addContact = createAction(\"ADD_CONTACT\");\r\n","import React, { Component } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport { connect } from \"react-redux\";\r\nimport Alert from \"./alert/Alert\";\r\nimport Filter from \"./filter/Filter\";\r\nimport css from \"./app.module.css\";\r\nimport { addContact, deleteContact } from \"./redux/actions\";\r\nimport filterTransition from \"./transitions/filterTransition.module.css\";\r\nimport logoTransition from \"./transitions/logoTransition.module.css\";\r\nimport alertTransition from \"./transitions/alertTransition.module.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" }\r\n    ],\r\n    filter: \"\",\r\n    alert: false,\r\n    logo: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts =\r\n      localStorage.getItem(\"contacts\") !== null\r\n        ? JSON.parse(localStorage.getItem(\"contacts\"))\r\n        : [];\r\n    this.setState({ contacts, logo: true });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n  }\r\n\r\n  submitContact = data => {\r\n    this.props.addContact(data);\r\n    const isNameExist = this.state.contacts.some(\r\n      contact => contact.name === data.name\r\n    );\r\n    !isNameExist\r\n      ? this.setState(prevState => ({\r\n          contacts: [...prevState.contacts, data]\r\n        }))\r\n      : this.setState({ alert: true });\r\n    setTimeout(() => this.setState({ alert: false }), 2000);\r\n  };\r\n\r\n  deleteContact = e => {\r\n    const id = e.target.id;\r\n    this.props.deleteContact(id);\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== id)\r\n    }));\r\n  };\r\n\r\n  nameFilter = e => {\r\n    this.setState({\r\n      filter: e.target.value\r\n    });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    return this.state.contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(this.state.filter)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className={css.titleWrapper}>\r\n          <CSSTransition\r\n            in={this.state.logo}\r\n            timeout={3000}\r\n            classNames={logoTransition}\r\n          >\r\n            <h1 className={css.mainTitle}>Phonebook</h1>\r\n          </CSSTransition>\r\n        </div>\r\n        <div className={css.avocado}>\r\n          <div className={css.formWrapper}>\r\n            <ContactForm submitContact={this.submitContact} />\r\n            <CSSTransition\r\n              in={this.state.contacts.length > 2}\r\n              timeout={1000}\r\n              classNames={filterTransition}\r\n              unmountOnExit\r\n            >\r\n              <Filter nameFilter={this.nameFilter} />\r\n            </CSSTransition>\r\n          </div>\r\n          <ContactList\r\n            contacts={this.getFilteredContacts()}\r\n            deleteContact={this.deleteContact}\r\n          />\r\n          <CSSTransition\r\n            in={this.state.alert}\r\n            timeout={750}\r\n            classNames={alertTransition}\r\n            unmountOnExit\r\n          >\r\n            <div className={css.mainAlertWrapper}>\r\n              <Alert />\r\n            </div>\r\n          </CSSTransition>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addContact, deleteContact })(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { store, persistor } from \"./components/redux/store\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleWrapper\":\"app_titleWrapper__17E5Q\",\"mainTitle\":\"app_mainTitle__3zttl\",\"formWrapper\":\"app_formWrapper__2KiGr\",\"areUOkButton\":\"app_areUOkButton__1ffmk\",\"avocado\":\"app_avocado__17WHk\",\"mainAlertWrapper\":\"app_mainAlertWrapper__KryBf\"};"],"sourceRoot":""}